{"ast":null,"code":"import * as yup from \"yup\";\nexport const loanDetailsSchema = yup.object({\n  loanPurpose: yup.mixed().oneOf([\"vehicle\", \"home\", \"etc\"]).required(\"Loan purpose is required\"),\n  amount: yup.number().typeError(\"Amount must be a number\").min(2000, \"Minimum amount is $2000\").required(\"Amount is required\"),\n  deposit: yup.number().nullable().default(null).typeError(\"Deposit must be a number\").min(0, \"Deposit must be at least $0\").when(\"loanPurpose\", {\n    is: \"vehicle\",\n    then: schema => schema.max(yup.ref(\"amount\"), \"Deposit must not exceed loan amount\").required(\"Deposit is required for vehicle loans\"),\n    otherwise: schema => schema.default(0)\n  }),\n  loanTerm: yup.number().typeError(\"Loan term must be a number\").min(1, \"Minimum 1 year\").max(7, \"Maximum 7 years\").required(\"Loan term is required\")\n});","map":{"version":3,"names":["yup","loanDetailsSchema","object","loanPurpose","mixed","oneOf","required","amount","number","typeError","min","deposit","nullable","default","when","is","then","schema","max","ref","otherwise","loanTerm"],"sources":["D:/personals/driva-assessment/client/src/components/loan-details-form/validation/schema.ts"],"sourcesContent":["import * as yup from \"yup\";\r\nimport { LoanDetailsFormValues } from \"../../../types\";\r\n\r\nexport const loanDetailsSchema: yup.ObjectSchema<LoanDetailsFormValues> =\r\n  yup.object({\r\n    loanPurpose: yup\r\n      .mixed<LoanDetailsFormValues[\"loanPurpose\"]>()\r\n      .oneOf([\"vehicle\", \"home\", \"etc\"])\r\n      .required(\"Loan purpose is required\"),\r\n    amount: yup\r\n      .number()\r\n      .typeError(\"Amount must be a number\")\r\n      .min(2000, \"Minimum amount is $2000\")\r\n      .required(\"Amount is required\"),\r\n    deposit: yup\r\n      .number()\r\n      .nullable()\r\n      .default(null)\r\n      .typeError(\"Deposit must be a number\")\r\n      .min(0, \"Deposit must be at least $0\")\r\n      .when(\"loanPurpose\", {\r\n        is: \"vehicle\",\r\n        then: (schema) =>\r\n          schema\r\n            .max(yup.ref(\"amount\"), \"Deposit must not exceed loan amount\")\r\n            .required(\"Deposit is required for vehicle loans\"),\r\n        otherwise: (schema) => schema.default(0),\r\n      }),\r\n    loanTerm: yup\r\n      .number()\r\n      .typeError(\"Loan term must be a number\")\r\n      .min(1, \"Minimum 1 year\")\r\n      .max(7, \"Maximum 7 years\")\r\n      .required(\"Loan term is required\"),\r\n  });\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAG1B,OAAO,MAAMC,iBAA0D,GACrED,GAAG,CAACE,MAAM,CAAC;EACTC,WAAW,EAAEH,GAAG,CACbI,KAAK,CAAuC,CAAC,CAC7CC,KAAK,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CACjCC,QAAQ,CAAC,0BAA0B,CAAC;EACvCC,MAAM,EAAEP,GAAG,CACRQ,MAAM,CAAC,CAAC,CACRC,SAAS,CAAC,yBAAyB,CAAC,CACpCC,GAAG,CAAC,IAAI,EAAE,yBAAyB,CAAC,CACpCJ,QAAQ,CAAC,oBAAoB,CAAC;EACjCK,OAAO,EAAEX,GAAG,CACTQ,MAAM,CAAC,CAAC,CACRI,QAAQ,CAAC,CAAC,CACVC,OAAO,CAAC,IAAI,CAAC,CACbJ,SAAS,CAAC,0BAA0B,CAAC,CACrCC,GAAG,CAAC,CAAC,EAAE,6BAA6B,CAAC,CACrCI,IAAI,CAAC,aAAa,EAAE;IACnBC,EAAE,EAAE,SAAS;IACbC,IAAI,EAAGC,MAAM,IACXA,MAAM,CACHC,GAAG,CAAClB,GAAG,CAACmB,GAAG,CAAC,QAAQ,CAAC,EAAE,qCAAqC,CAAC,CAC7Db,QAAQ,CAAC,uCAAuC,CAAC;IACtDc,SAAS,EAAGH,MAAM,IAAKA,MAAM,CAACJ,OAAO,CAAC,CAAC;EACzC,CAAC,CAAC;EACJQ,QAAQ,EAAErB,GAAG,CACVQ,MAAM,CAAC,CAAC,CACRC,SAAS,CAAC,4BAA4B,CAAC,CACvCC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,CACxBQ,GAAG,CAAC,CAAC,EAAE,iBAAiB,CAAC,CACzBZ,QAAQ,CAAC,uBAAuB;AACrC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}