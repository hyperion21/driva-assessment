{"ast":null,"code":"import * as yup from \"yup\";\nexport const personalDetailsSchema = yup.object({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  employmentStatus: yup.mixed().oneOf([\"employed\", \"self-employed\", \"unemployed\"]).required(\"Employment status is required\"),\n  employerName: yup.string().when(\"employmentStatus\", {\n    is: \"employed\",\n    then: schema => schema.required(\"Employer name is required\"),\n    otherwise: schema => schema.notRequired()\n  })\n});","map":{"version":3,"names":["yup","personalDetailsSchema","object","firstName","string","required","lastName","email","employmentStatus","mixed","oneOf","employerName","when","is","then","schema","otherwise","notRequired"],"sources":["D:/personals/driva-assessment/client/src/components/personal-details-form/validation/schema.ts"],"sourcesContent":["import * as yup from \"yup\";\r\nimport { PersonalDetailsFormValues } from \"../../../types\";\r\n\r\nexport const personalDetailsSchema: yup.ObjectSchema<PersonalDetailsFormValues> =\r\n  yup.object({\r\n    firstName: yup.string().required(\"First name is required\"),\r\n    lastName: yup.string().required(\"Last name is required\"),\r\n    email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    employmentStatus: yup\r\n      .mixed<PersonalDetailsFormValues[\"employmentStatus\"]>()\r\n      .oneOf([\"employed\", \"self-employed\", \"unemployed\"])\r\n      .required(\"Employment status is required\"),\r\n    employerName: yup.string().when(\"employmentStatus\", {\r\n      is: \"employed\",\r\n      then: (schema) => schema.required(\"Employer name is required\"),\r\n      otherwise: (schema) => schema.notRequired(),\r\n    }),\r\n  });\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAG1B,OAAO,MAAMC,qBAAkE,GAC7ED,GAAG,CAACE,MAAM,CAAC;EACTC,SAAS,EAAEH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB,CAAC;EAC1DC,QAAQ,EAAEN,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC;EACxDE,KAAK,EAAEP,GAAG,CAACI,MAAM,CAAC,CAAC,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,mBAAmB,CAAC;EACxEG,gBAAgB,EAAER,GAAG,CAClBS,KAAK,CAAgD,CAAC,CACtDC,KAAK,CAAC,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC,CAClDL,QAAQ,CAAC,+BAA+B,CAAC;EAC5CM,YAAY,EAAEX,GAAG,CAACI,MAAM,CAAC,CAAC,CAACQ,IAAI,CAAC,kBAAkB,EAAE;IAClDC,EAAE,EAAE,UAAU;IACdC,IAAI,EAAGC,MAAM,IAAKA,MAAM,CAACV,QAAQ,CAAC,2BAA2B,CAAC;IAC9DW,SAAS,EAAGD,MAAM,IAAKA,MAAM,CAACE,WAAW,CAAC;EAC5C,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}